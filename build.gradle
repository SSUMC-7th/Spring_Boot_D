plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Hibernate & JPA dependencies
	implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'
	implementation 'org.hibernate.common:hibernate-commons-annotations:6.0.1.Final'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

	// MySQL driver
	implementation 'mysql:mysql-connector-java:8.0.33'

	// Querydsl dependencies
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// Jackson dependencies
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	// OpenAPI documentation
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'

	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// Querydsl source set 설정
def generated = 'build/generated/sources/annotationProcessor/java/main'

sourceSets {
	main {
		java.srcDirs = ['src/main/java', generated]
	}
}

querydsl {
	jpa = true
	querydslSourcesDir = generated
}

tasks.named('compileJava') {
	options.annotationProcessorPath = configurations.annotationProcessor
}

configurations {
	querydsl.extendsFrom compileClasspath
	annotationProcessor.extendsFrom querydsl
}

// Gradle clean task에 generated 디렉토리 삭제 추가
tasks.register("cleanGenerated", Delete) {
	delete generated
}

clean.dependsOn "cleanGenerated"

tasks.named('test') {
	useJUnitPlatform()
}
